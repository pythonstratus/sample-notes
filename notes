from urllib.request import urlopen
import xml.etree.ElementTree as et
from datetime import datetime as dt

# Base paths setup - using dbfs path format
BASE_PATH = '/dbfs/Volumes/staging/fpds'
RAW_PATH = f'{BASE_PATH}/raw'

def create_dated_folders(date):
    """Create YYYY/MM folder structure and return the path"""
    year = date.strftime('%Y')
    month = date.strftime('%m')
    folder_path = f"{RAW_PATH}/{year}/{month}"
    
    # Use dbutils instead of os.makedirs
    dbutils.fs.mkdirs(folder_path.replace('/dbfs', ''))
    return folder_path

def write_data():
    """Function to write entries to XML file with organized folder structure"""
    # Get current date for folder creation
    current_date = dt.now()
    folder_path = create_dated_folders(current_date)
    
    # Create output filename with date
    filename = f'fpds_{current_date.strftime("%Y%m%d")}.xml'
    file_output_path = f"{folder_path}/{filename}"
    
    # Create output file
    with open(file_output_path, 'w') as output_file:
        # Write opening tag
        output_file.write("<feed>")
        
        # Write each entry to output file
        for entry_XML in get_data():
            output_file.write(entry_XML.decode("utf-8"))
            
        # Write closing tag
        output_file.write("</feed>")

def main():
    # Set Request Defaults
    global request_BaseURL, request_ModifiedDate
    
    request_BaseURL = 'https://www.fpds.gov/dbsight/FEEDS/ATOM?templateName=1.5.3&FEEDNAME=PUBLIC&q=FUNDING_AGENCY_ID:"9555"'
    request_ModifiedDate = '2010/01/01'
    
    # Create base folders if they don't exist
    dbutils.fs.mkdirs(RAW_PATH.replace('/dbfs', ''))
    
    # Execute main data fetch and write
    write_data()

if __name__ == "__main__":
    main()
