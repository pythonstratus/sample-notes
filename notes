CREATE TABLE new_table_name AS
SELECT a.*,
       c.namex AS "Contact Name",
       e.event_id AS "Event ID",
       en.namex AS "Entity Name"
FROM sv3_ses.activity_update a
LEFT JOIN sv3_ses.contact c ON a.contact = c.id
LEFT JOIN sv3_ses.recordtype r ON a.recordtypeid = r.id
LEFT JOIN sv3_rpt.exams e ON a.eventx = e.salesforce_event_id
LEFT JOIN sv3_ses.account en ON a.entity = en.id;




CREATE TABLE AS (CTAS):

Pros:
- Independent data copy - source table changes don't affect it
- Better query performance (no recomputation)
- Can add indexes, constraints, and partitioning
- More control over refresh timing

Cons:
- Takes more storage space
- Manual maintenance required for updates
- Data can become stale
- Additional ETL processes needed

MATERIALIZED VIEW:

Pros:
- Built-in refresh mechanisms
- Easier maintenance
- Automatic schema updates if source changes
- Better space efficiency

Cons:
- Slower than direct table access
- Can't add indexes or constraints
- Refresh locks the entire view
- All-or-nothing refresh (no incremental updates)

Recommendation: Use CTAS if you need:
- Complex indexing
- Custom refresh logic
- Full control over the data
Use Materialized View if you need:
- Simpler maintenance
- Automatic schema alignment
- Less storage overhead


MV approach:

-- Create materialized view
CREATE MATERIALIZED VIEW mv_contact_exam_activity AS 
SELECT a.*,
      c.namex AS "Contact Name",
      e.event_id AS "Event ID",
      en.namex AS "Entity Name"
FROM sv3_ses.activity_update a
LEFT JOIN sv3_ses.contact c ON a.contact = c.id
LEFT JOIN sv3_ses.recordtype r ON a.recordtypeid = r.id
LEFT JOIN sv3_rpt.exams e ON a.eventx = e.salesforce_event_id
LEFT JOIN sv3_ses.account en ON a.entity = en.id;

-- Refresh command
REFRESH MATERIALIZED VIEW mv_contact_exam_activity;

-- Create index (optional, for better query performance)
CREATE INDEX idx_mv_contact_exam_activity_id ON mv_contact_exam_activity(id);

-- Grant permissions
GRANT SELECT ON mv_contact_exam_activity TO your_user_role;



Refresh scheduling with cron job example:
bashCopy0 */4 * * * psql -d yourdb -c "REFRESH MATERIALIZED VIEW mv_contact_exam_activity;"
