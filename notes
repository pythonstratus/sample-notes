# Clean up the data with fixes for amounts and contract description
cleaned_df = processed_df \
    .withColumn("signed_date", to_timestamp("signed_date")) \
    .withColumn("effective_date", to_timestamp("effective_date")) \
    .withColumn("completion_date", to_timestamp("completion_date")) \
    .withColumn("ultimate_completion_date", to_timestamp("ultimate_completion_date")) \
    .withColumn("created_date", to_timestamp("created_date")) \
    .withColumn("last_modified_date", to_timestamp("last_modified_date")) \
    \
    # Fix monetary amounts to show 2 decimal places
    .withColumn("obligated_amount", round(col("obligated_amount").cast(DecimalType(18,2)), 2)) \
    .withColumn("base_and_exercised_options_value", round(col("base_and_exercised_options_value").cast(DecimalType(18,2)), 2)) \
    .withColumn("base_and_all_options_value", round(col("base_and_all_options_value").cast(DecimalType(18,2)), 2)) \
    .withColumn("total_obligated_amount", round(col("total_obligated_amount").cast(DecimalType(18,2)), 2)) \
    \
    # Clean up strings
    .withColumn("zip_code", trim(col("zip_code"))) \
    .withColumn("state", trim(col("state"))) \
    .withColumn("city", trim(col("city"))) \
    .withColumn("vendor_name", trim(col("vendor_name"))) \
    .withColumn("phone_no", trim(col("phone_no"))) \
    \
    # Clean up contract description
    .withColumn("contract_description", 
        when(col("contract_description").startswith("IGF::OT::IGF"), 
             regexp_replace(col("contract_description"), "^IGF::OT::IGF\\s*", ""))
        .otherwise(col("contract_description"))) \
    .withColumn("contract_description", trim(col("contract_description")))

# Display first 100 rows
display(cleaned_df.head(100))
